#!/usr/bin/python
#
# Copyright (c) 2010 The Ginsu Project Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import os
import re
Import('env')

src_pattern = re.compile('.*\.cpp')
linux_pattern = re.compile('.X11\.cpp')
mac_pattern = re.compile('.Carbon\.cpp')
windows_pattern = re.compile('.*Win32\.cpp')

def IsSourceFile(file_name):
  if not src_pattern.match(file_name): return False
  if env.Bit('linux'):
    if mac_pattern.match(file_name): return False
    if windows_pattern.match(file_name): return False
  elif env.Bit('mac'):
    if linux_pattern.match(file_name): return False
    if windows_pattern.match(file_name): return False
  elif env.Bit('windows'):
    if linux_pattern.match(file_name): return False
    if mac_pattern.match(file_name): return False
  return True

def GetLocalFilePath(file_name, module):
  return 'trunk/src/' + module + '/' + file_name

def GetSourceFiles(module):
  module_src_dir = env['SOURCE_ROOT'] + '/third_party/openscenegraph/trunk/src/' + module;
  all_files = os.listdir(module_src_dir)
  src_files = filter(IsSourceFile, all_files)
  return [GetLocalFilePath(f, module) for f in src_files]

osg_srcs = GetSourceFiles('osg')
env.ComponentLibrary('libosg', osg_srcs, COMPONENT_STATIC=True)
env.Append(LIBS=['libosg'])

osgViewer_srcs = GetSourceFiles('osgViewer')
env.ComponentLibrary('libosgViewer', osgViewer_srcs, COMPONENT_STATIC=True)
env.Append(LIBS=['libosgViewer'])
